#!/usr/bin/env ruby

def get_windows
  windows = `tmux list-windows -F '#I #W #F'`.split("\n").map do |window|
    data = window.split(" ")
    {
      number: data.first.to_i,
      name: data[1],
      current: data.last == "*" ? true : false
    }
  end
end

def fill_holes(windows)
  padding_indices = []
  current = 1

  windows.each do |window|
    if (current) != window[:number]
      (current).upto(window[:number] - 1).each do |i|
        `tmux new-window -d -n padding`
        padding_indices << i
        current = window[:number] + 1
      end
    else
      current += 1
    end
  end

  padding_indices.reverse
end

def swap_windows(windows, padding_indices)
  current = 1
  windows.each do |window|
    next if window[:name] == "padding"
    if window[:number] != current
      target = padding_indices.pop
      `tmux swap-window #{!window[:current] ? "-d" : ""} -s #{window[:number]} -t #{target}`
      padding_indices << window[:number]
      padding_indices = padding_indices.sort.reverse
    elsif
      current += 1
    end
  end
end

def remove_padding(windows)
  windows.each do |window|
    if window[:name] == "padding"
      `tmux kill-window -t #{window[:number]}`
    end
  end
end

padding_indices = fill_holes(get_windows)
swap_windows(get_windows, padding_indices)
remove_padding(get_windows)
